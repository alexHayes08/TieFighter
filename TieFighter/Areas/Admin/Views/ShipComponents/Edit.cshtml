@model TieFighter.Models.ShipComponent

@{
    ViewData["Title"] = "Edit";
    var selectValues = Enum.GetNames(typeof(ShipComponentType));
    var currentTypeName = Enum.GetName(typeof(ShipComponent), Model.Type);
}

<div class="d-flex align-items-center">
    <h2 class="flex-grow">Edit Ship - @Model.DisplayName</h2>
    <input type="button" id="updateEntity" value="Update" class="btn btn-primary align-middle mx-2" />
    <a asp-action="Index">Back to List</a>
</div>
<hr />
<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input id="shipId" class="hidden" type="hidden" value="@Model.Id" />
    <div class="form-group">
        <label asp-for="Id" class="control-label"></label>
        <input asp-for="Id" class="form-control-plaintext form-control d-block" readonly />
    </div>
    <div class="form-group">
        <label asp-for="DisplayName" class="control-label"></label>
        <input asp-for="DisplayName" class="form-control" />
        <span asp-validation-for="DisplayName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Type" class="control-label"></label>
        <select class="custom-select" name="@nameof(ShipComponent.Type)" id="@nameof(ShipComponent.Type)">
            @foreach (var item in selectValues)
            {
                if (item == currentTypeName)
                {
                <option value="@item" selected>@item</option>
                }
                else
                {
                    <option value="@item">@item</option>
                }
            }
        </select>
        <span asp-validation-for="Type" class="text-danger"></span>
    </div>
</form>

