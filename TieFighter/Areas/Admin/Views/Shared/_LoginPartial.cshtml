@using Microsoft.AspNetCore.Identity
@using TieFighter.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    @*<form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">@UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>*@
    @*<a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage"></a>*@
    <div class="dropdown">
        <button class="btn btn-link dropdown-toggle" type="button" id="account2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @UserManager.GetUserName(User)
        </button>
        <div class="dropdown-menu" aria-labelledby="account2">
            @*@{
                var user = (await SignInManager.UserManager.GetUserAsync(User));
                if ((await SignInManager.UserManager.GetRolesAsync(user)).Contains("admin"))
                {
                <a id="admin" class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="Index">Admin</a>

                }
            }*@
            <a id="admin" class="dropdown-item" asp-area="Admin" asp-controller="Home" asp-action="Index">Admin</a>
            <a id="yourAccountInfo" class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Info">Account Info</a>
            <a id="yourStats" class="dropdown-item" asp-area="" asp-controller="Account" asp-action="YourStats">Your Stats</a>
            <a id="Logout" class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Info">Logout</a>
        </div>
    </div>
}
else
{
    <li>
        <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
        @{
            var provider = (await SignInManager.GetExternalAuthenticationSchemesAsync()).First();
            <button type="submit" class="btn btn-link nav-link" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">Login</button>
            @*<a class="nav-link" asp-area="" asp-controller="Account" asp-action="ExternalLogin">Login</a>*@
        }
        </form>
    </li>
}
